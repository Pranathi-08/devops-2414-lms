pipeline {
    agent {
    node {
        label 'slave'
         }
        }
    environment {
    dockerhub=credentials('dockerhub')
    }
    stages{
        stage('slack-notification'){
            steps{
            slackSend channel: 'devops', 
                    color: '439FE0', 
                    message: "started ${JOB_NAME} ${BUILD_NUMBER} (<${BUILD_URL}|Open>)", 
                    teamDomain: 'dl-muraliworkspace', 
                    tokenCredentialId: 'slack', 
                    username: 'jenkins'
            }
        }
        stage('remove-old-container'){
            steps{
                sh 'docker container rm -f backend'
                sh 'docker rmi murali1108/api:latest'
            }
        }
        stage('Build Docker Image') {
            steps {
                script {

                    // Get the Jenkins build number
                    def buildNumber = env.BUILD_NUMBER
                    
                    // Build the Docker image with a tag including the build number
                    sh "cd api && docker build -t murali1108/api:${buildNumber} ."
                        
                    // Tag the new image as latest
                    sh "docker tag murali1108/api:${buildNumber} murali1108/api:latest"
                }
            }
        }
        stage('Docker Login') { 
            steps {
                sh 'echo $dockerhub_PSW | docker login -u $dockerhub_USR --password-stdin'
            }
          }

        stage('Push Image to DockerHub') {
            steps {
                script {
                    // Get the Jenkins build number
                    def buildNumber = env.BUILD_NUMBER
        
                    sh "docker push murali1108/api:${buildNumber}"
                    sh "docker push murali1108/api:latest"
                    sh "docker rmi murali1108/api:${buildNumber}"
                }
            }
        } 
        stage ('Approval') {
            steps {
                emailext    subject: "Deployment Approval for $deployBranch branch and $deployService service",
                            body: "<a href='${JENKINS_URL}/job/${JOB_NAME}/${BUILD_NUMBER}/input'>click to approve</a>",
                            to: 'muralialakuntla3@gmail.com',
                            mimeType: 'text/html',
                            attachLog: true
                script {
                    def Delay = input id: 'Deploy',
                        message: sh(script:'''echo "You are DEPLOYING -->$deployBranch<-- IN PRODUCTION"''', returnStdout: true).trim(),
                        submitter: 'uaserID1, userID2',
                        parameters: [
                                [$class: 'ChoiceParameterDefinition',
                                    choices: ['no','yes'].join('\n'),
                                    name: 'input',
                                    description: 'Please Select "YES" to Build or "NO" to Abort']
                        ]
                        echo "The answer is: ${Delay}"
                        if( "${Delay}" == "yes"){
                        sh'''echo "Deploying in prod"'''
                        } else {
                        sh """
                        echo "exiting not production ready branch"
                        exit 1
                        """
                        }
                }
            }
        }

        stage('Docker run container') { 
            steps {
                sh 'docker run -dt --network lmsnetwork  --name backend  -p 8080:8080 murali1108/api:latest'
            }
          }
        }
  }
